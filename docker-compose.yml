version: '3.8'

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: ankane/pgvector:latest
    container_name: memory-system-postgres
    environment:
      POSTGRES_USER: memoryuser
      POSTGRES_PASSWORD: memorypass
      POSTGRES_DB: memorydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U memoryuser -d memorydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (Phase 2)
  redis:
    image: redis:7-alpine
    container_name: memory-system-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    profiles:
      - phase2  # Only start with: docker-compose --profile phase2 up

  # Test database (separate from development)
  postgres-test:
    image: ankane/pgvector:latest
    container_name: memory-system-postgres-test
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb
    ports:
      - "5433:5432"
    tmpfs:
      - /var/lib/postgresql/data  # Use tmpfs for faster tests
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 5s
      timeout: 3s
      retries: 3
    profiles:
      - test  # Only start with: docker-compose --profile test up

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
